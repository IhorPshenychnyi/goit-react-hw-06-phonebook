{"version":3,"sources":["App.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css"],"names":["module","exports","ContactForm","onSubmit","useState","name","setName","number","setNumber","handleChange","e","currentTarget","value","reset","className","s","form","preventDefault","label","type","pattern","title","required","onChange","button","ContactList","contacts","handleClick","list","map","id","btn","onClick","Filter","input","initialValue","App","setContacts","filter","setFilter","useEffect","localContacts","localStorage","getItem","parsedContacts","JSON","parse","setItem","stringify","container","data","some","contact","toLowerCase","alert","prevState","shortid","generate","normalizedFilter","includes","getVisibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,UAAY,yB,sKCI9B,SAASC,EAAT,GAAoC,IAAbC,EAAY,EAAZA,SACrB,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEMC,EAAe,SAACC,GACpB,MAAwBA,EAAEC,cAAlBN,EAAR,EAAQA,KAAMO,EAAd,EAAcA,MAED,SAATP,EACFC,EAAQM,GACU,WAATP,GACTG,EAAUI,IAURC,EAAQ,WACZP,EAAQ,IACRE,EAAU,KAGZ,OACE,uBAAMM,UAAWC,IAAEC,KAAMb,SAZN,SAACO,GACpBA,EAAEO,iBACFd,EAAS,CAAEE,OAAME,WACjBM,KASA,UACE,wBAAOC,UAAWC,IAAEG,MAApB,iBAEE,uBACEC,KAAK,OACLd,KAAK,OACLe,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRV,MAAOP,EACPkB,SAAUd,OAId,wBAAOK,UAAWC,IAAEG,MAApB,mBAEE,uBACEC,KAAK,MACLd,KAAK,SACLe,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRV,MAAOL,EACPgB,SAAUd,OAId,wBAAQK,UAAWC,IAAES,OAAQL,KAAK,SAAlC,4B,oBCvDAM,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,YAAb,OAClB,oBAAIb,UAAWC,IAAEa,KAAjB,SACGF,EAASG,KAAI,gBAAGC,EAAH,EAAGA,GAAIzB,EAAP,EAAOA,KAAME,EAAb,EAAaA,OAAb,OACZ,+BACE,iCACGF,EADH,KACWE,KAEX,wBAAQO,UAAWC,IAAEgB,IAAKZ,KAAK,SAASa,QAAS,kBAAML,EAAYG,IAAnE,sBAJOA,S,gBCHTG,EAAS,SAAC,GAAD,IAAGrB,EAAH,EAAGA,MAAOW,EAAV,EAAUA,SAAV,OACb,wBAAOT,UAAWC,IAAEG,MAApB,kCAEE,uBACEJ,UAAWC,IAAEmB,MACbf,KAAK,OACLd,KAAK,OACLe,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRV,MAAOA,EACPW,SAAUA,Q,iBCLVY,EAAe,CACnB,CAAEL,GAAI,OAAQzB,KAAM,gBAAiBE,OAAQ,aAC7C,CAAEuB,GAAI,OAAQzB,KAAM,iBAAkBE,OAAQ,aAC9C,CAAEuB,GAAI,OAAQzB,KAAM,gBAAiBE,OAAQ,aAC7C,CAAEuB,GAAI,OAAQzB,KAAM,iBAAkBE,OAAQ,cAuEjC6B,MApEf,WACE,MAAgChC,mBAAS+B,GAAzC,mBAAOT,EAAP,KAAiBW,EAAjB,KACA,EAA4BjC,mBAAS,IAArC,mBAAOkC,EAAP,KAAeC,EAAf,KAqDA,OAnDAC,qBAAU,WACR,IAAMC,EAAgBC,aAAaC,QAAQ,YACrCC,EAAiBC,KAAKC,MAAML,GAE9BG,GACFP,EAAYO,KAEb,IAEHJ,qBAAU,WACRE,aAAaK,QAAQ,WAAYF,KAAKG,UAAUtB,MAC/C,CAACA,IAyCF,sBAAKZ,UAAWC,IAAEkC,UAAlB,UACE,2CACA,cAAC/C,EAAD,CAAaC,SAzCI,SAAC+C,GACCxB,EAASyB,MAC5B,SAACC,GAAD,OAAaA,EAAQ/C,KAAKgD,gBAAkBH,EAAK7C,KAAKgD,iBAItDC,MAAM,GAAD,OAAIJ,EAAK7C,KAAT,6BAIPgC,GAAY,SAACkB,GAAD,OACV,CACEzB,GAAI0B,IAAQC,WACZpD,KAAM6C,EAAK7C,KACXE,OAAQ2C,EAAK3C,SAJL,mBAMPgD,UA2BH,0CACA,cAAC,EAAD,CAAQ3C,MAAO0B,EAAQf,SAlBN,SAACb,GACpB6B,EAAU7B,EAAEC,cAAcC,UAmBxB,cAAC,EAAD,CAAac,SAhBU,WACzB,IAAMgC,EAAmBpB,EAAOe,cAEhC,OAAO3B,EAASY,QAAO,SAACc,GAAD,OACrBA,EAAQ/C,KAAKgD,cAAcM,SAASD,MAYbE,GAAsBjC,YA1B5B,SAACG,GACpBO,GAAY,SAACkB,GAAD,OACVA,EAAUjB,QAAO,SAACc,GAAD,OAAaA,EAAQtB,KAAOA,eCjDnD+B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BjE,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,OAAS,8B,kBCA/FD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,IAAM,2B,kBCAzDD,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,MAAQ,yB","file":"static/js/main.f954ce1f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1574r\"};","import { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport s from \"./ContactForm.module.css\";\n\nfunction ContactForm({ onSubmit }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n\n    if (name === \"name\") {\n      setName(value);\n    } else if (name === \"number\") {\n      setNumber(value);\n    }\n  };\n\n  const onFormSubmit = (e) => {\n    e.preventDefault();\n    onSubmit({ name, number });\n    reset();\n  };\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form className={s.form} onSubmit={onFormSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={name}\n          onChange={handleChange}\n        />\n      </label>\n\n      <label className={s.label}>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={number}\n          onChange={handleChange}\n        />\n      </label>\n\n      <button className={s.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport { ContactForm };\n","import PropTypes from \"prop-types\";\nimport s from \"./ContactList.module.css\";\n\nconst ContactList = ({ contacts, handleClick }) => (\n  <ul className={s.list}>\n    {contacts.map(({ id, name, number }) => (\n      <li key={id}>\n        <span>\n          {name}: {number}\n        </span>\n        <button className={s.btn} type=\"button\" onClick={() => handleClick(id)}>\n          Delete\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string.isRequired)),\n  handleClick: PropTypes.func.isRequired,\n};\n\nexport { ContactList };\n","import PropTypes from \"prop-types\";\nimport s from \"./Filter.module.css\";\n\nconst Filter = ({ value, onChange }) => (\n  <label className={s.label}>\n    Find contacts by name\n    <input\n      className={s.input}\n      type=\"text\"\n      name=\"name\"\n      pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n      title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n      required\n      value={value}\n      onChange={onChange}\n    />\n  </label>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport { Filter };\n","import { useEffect, useState } from \"react\";\nimport shortid from \"shortid\";\n\nimport { ContactForm } from \"./components/ContactForm/ContactForm\";\nimport { ContactList } from \"./components/ContactList/ContactList\";\nimport { Filter } from \"./components/Filter/Filter\";\n\nimport s from \"./App.module.css\";\n\nconst initialValue = [\n  { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n  { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n  { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n  { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n];\n\nfunction App() {\n  const [contacts, setContacts] = useState(initialValue);\n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(() => {\n    const localContacts = localStorage.getItem(\"contacts\");\n    const parsedContacts = JSON.parse(localContacts);\n\n    if (parsedContacts) {\n      setContacts(parsedContacts);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  const handleSubmit = (data) => {\n    const existContact = contacts.some(\n      (contact) => contact.name.toLowerCase() === data.name.toLowerCase()\n    );\n\n    if (existContact) {\n      alert(`${data.name} is already in contacts.`);\n      return;\n    }\n\n    setContacts((prevState) => [\n      {\n        id: shortid.generate(),\n        name: data.name,\n        number: data.number,\n      },\n      ...prevState,\n    ]);\n  };\n\n  const handleRemove = (id) => {\n    setContacts((prevState) =>\n      prevState.filter((contact) => contact.id !== id)\n    );\n  };\n\n  const changeFilter = (e) => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  return (\n    <div className={s.container}>\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={handleSubmit} />\n\n      <h2>Contacts</h2>\n      <Filter value={filter} onChange={changeFilter} />\n\n      <ContactList contacts={getVisibleContacts()} handleClick={handleRemove} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"modern-normalize/modern-normalize.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1izFR\",\"label\":\"ContactForm_label__lY5zL\",\"button\":\"ContactForm_button__3CvPs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2zPe7\",\"btn\":\"ContactList_btn__3hlmd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__11yzI\",\"input\":\"Filter_input__3WkDg\"};"],"sourceRoot":""}